//声明语句:
//<声明语句> ::= <类型><标识符字符串>; | <类型><标识符字符串>[<数字>]; 
//<类型> ::= <简单类型> | <引用类型> | <结构体或者枚举> | <自定义类型> 
//<指针类型> ::= <简单类型> * | <自定义类型> * 
//<简单类型> ::= int8|int16|int32|int64|uint8|uint16|uint32|uint64|double 
//<自定义类型> ::= enum<标识符字符串>|struct<标识符字符串>|<标识符字符串>
//<引用类型> ::=<简单类型>& | <自定义类型>&
//
//结构体:
//<结构体定义>::=  struct '{' <结构体或枚举声明列表> '}'
//<结构体或枚举声明列表>::= <类型><标识符字符串>|<结构体或枚举声明列表><类型><标识符字符串>
//
//<空间类型>::= space <标识符字符串> '{' <代码体> '}'
//
//标识符：
//
//<标识符>::=<字母> | <标识符><字母数字串>
//<字母>::= '_' | <大写字母> | <小写字母>
//<小写字母>::= 'a' | 'b' | 'c' | 'd' | .....
//<大写字母>::= 'A' | 'B' | 'C' | 'D' | ......
//
//数字：
//<数字>::=0x<十六进制数字串>|<十进制数字串>
//<十六进制数字串>::=<十六进制数字>|<十六进制数字串><十六进制数字>
//<十进制数字串>::=<十进制数字> | <十进制数字串><十进制数字>
//<十六进制数字>::=<十进制数字> | A | B | C | D | E | F
//<十进制数字>::= '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9'
//
//
//
/////////////////////////////////////////////////////////////////////////////
//<程序>::=<变量> | <函数>
//<函数>::= func <类型> <标识符> '(' <参数列表>  ')' '{' <> '}'
//<参数列表>::=<参数> | <参数列表>
//
//<空间>::= space <标识符> '{' <空间内容> '}'




//////////////////////////////////////////////////////////////
<program>::=<import_body> | <program_body>

头文件导入功能
<import_body>::=<import_body_item> | <import_body>
<import_body_item>::= import <import_body_item_path>
<import_body_item_path>::= <identifier> | <identifier> '.'| <import_body_item_path>

//程序体
<program_body>::= <space_name> | <variable_declare_and_code> 
<space_name>::= space <identifier> '{' <variable_declare_and_code> '}' | <space_name>
<variable_declare_and_code>::= <variable_declare> | <code_gather> 

变量声明
<variable_declare>::=<declare_type> | <identifier>  | & <identifier> 
<declare_type>::=<inner_declare_type> | <custom_declare_type>
<inner_declare_type>::=int8|int16|int32|int64|uint8|uint16|uint32|uint64|double
<custom_declare_type>::= enum <identifier> | struct <identifier>

<struct_enum_definition>::= struct <identifier> '{' <struct_enum_declare_list> '}'
<struct_enum_declare_list>::=<variable_declare_and_code> <identifier> | <function_implement_list> | <struct_enum_declare_list>

//代码集合
<space_function_list>::=space <identifier> '{' <space_function_list> | <function_list>  '}'
<function_list>::=<function_declare_list> | <function_implement_list>

//函数声明
<function_declare_list>::=<function_declare> | <function_declare_list>
<function_declare>::=function <identifier> | '(' <function_parameter_list> ')' | '(' ')'
<function_parameter_list>::= <variable_declare> | <function_parameter_list>

//函数实现
<function_implement_list>::=<function_declare> <function_body>
<function_body>::= '{' <function_unit_lsit> '}'
<function_unit_lsit>::=<function_unit> | <function_unit_lsit>
<function_unit>::=<expression> | <function_unit>
<expression>::=<jump_expression> | <asignment_expression> | <condition_expression> | <logical_expression>

//逻辑运算表达式
<logical_expression>::=<logical_or_expression> | <logical_and_expression> | <logical_not_expression>
<logical_or_expression>::=<logical_and_expression> | <logical_or_expression> or <logical_and_expression> 